import { MonitorBindingController } from '../controller/monitor-binding';
import { ComponentApi } from './component-api';
interface MonitorBindingApiEventHandlers {
    update: (value: unknown) => void;
}
/**
 * The API for the monitor binding between the parameter and the pane.
 */
export declare class MonitorBindingApi<In> implements ComponentApi {
    /**
     * @hidden
     */
    readonly controller: MonitorBindingController<In>;
    /**
     * @hidden
     */
    constructor(bindingController: MonitorBindingController<In>);
    get hidden(): boolean;
    set hidden(hidden: boolean);
    dispose(): void;
    on<EventName extends keyof MonitorBindingApiEventHandlers>(eventName: EventName, handler: MonitorBindingApiEventHandlers[EventName]): MonitorBindingApi<In>;
    refresh(): void;
}
export {};
