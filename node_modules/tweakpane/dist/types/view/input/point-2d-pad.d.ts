import { Foldable } from '../../model/foldable';
import { InputValue } from '../../model/input-value';
import { Point2d } from '../../model/point-2d';
import { View, ViewConfig } from '../view';
import { InputView } from './input';
interface Config extends ViewConfig {
    foldable: Foldable;
    invertsY: boolean;
    value: InputValue<Point2d>;
    maxValue: number;
}
/**
 * @hidden
 */
export declare class Point2dPadInputView extends View implements InputView<Point2d> {
    readonly foldable: Foldable;
    readonly value: InputValue<Point2d>;
    private readonly invertsY_;
    private readonly maxValue_;
    private padElem_;
    private svgElem_;
    private lineElem_;
    private markerElem_;
    constructor(document: Document, config: Config);
    get padElement(): HTMLDivElement;
    get allFocusableElements(): HTMLElement[];
    update(): void;
    private onValueChange_;
    private onFoldableChange_;
}
export {};
